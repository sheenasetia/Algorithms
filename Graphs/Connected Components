import java.util.*;
public class Graph{

    private int V;
    LinkedList<Integer> adjList[];
    
    Graph(int V) { 
        this.V = V; 
        adjList = new LinkedList[V]; 
        for(int i = 0; i < V ; i++){ 
            adjList[i] = new LinkedList<Integer>(); 
        } 
    } 
    
    
    void addEdge(int v,int e)
    {
        adjList[v].add(e);
        adjList[e].add(v);
    }
    
    void DFS(int v,boolean visited[])
    {
        visited[v]=true;
        System.out.print(v+" ");
        for(int i=0;i<adjList[v].size();i++)
        {
            if(visited[adjList[v].get(i)]==false)
            {
                DFS(adjList[v].get(i),visited);
            }
        }
    }

    void connectedComponents() { 
        
       boolean visited[]=new boolean[V];
       
       int c=0;
       for(int i=0;i<V;i++)
       {
            if(visited[i]==false)
            {
                DFS(i,visited);
                System.out.println();
                c++;
            }
       }
       
       System.out.println("total count of connected components = "+c);
       
    } 
    
    public static void main(String[] args){ 
        
        Graph g = new Graph(5);  
          
        g.addEdge(1, 0);  
        g.addEdge(2, 3);  
        g.addEdge(3, 4); 
        System.out.println("Following are connected components"); 
        g.connectedComponents(); 
    } 
}
