import java.io.*; 
import java.util.*; 
public class Graphs{

    private int V;   
  
    private LinkedList<Integer> adj[]; 

    Graphs(int v) 
    { 
        V = v; 
        adj = new LinkedList[v]; 
        for (int i=0; i<v; ++i) 
            adj[i] = new LinkedList(); 
    } 
  
    void addEdge(int v, int w) 
    { 
        adj[v].add(w);  
    } 
  
    
    void dfs(int v,boolean visited[])
    {
        System.out.println(v);
        for(int i=0;i<adj[v].size();i++)
        {
            if(!visited[adj[v].get(i)])
            {
                visited[adj[v].get(i)]=true;
                dfs(adj[v].get(i),visited);
            }
        
        }
    }
    
    void DFS(int start)
    {
        boolean visited[]=new boolean[V];
        
        if(visited[start]==false)
        {
            visited[start]=true;
            dfs(start,visited);
        }
            
    }
    public static void main(String args[]) 
    { 
        Graphs g = new Graphs(4); 
  
        g.addEdge(0, 1); 
        g.addEdge(0, 2); 
        g.addEdge(1, 2); 
        g.addEdge(2, 0); 
        g.addEdge(2, 3); 
        g.addEdge(3, 3); 
        
        Scanner sc=new Scanner(System.in);
        
        int start=sc.nextInt();
  
        System.out.println("Following is Depth First Traversal "+ 
                           "(starting from vertex "+start+")"); 
  
        g.DFS(start); 
    } 
} 
